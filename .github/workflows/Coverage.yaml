name: Tests And Coverage

on:
  workflow_dispatch:
      
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: elisaalcala/mydb:latest
        env:
          MYSQL_ROOT_PASSWORD: 3301
          MYSQL_DATABASE: alcalapp_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=3

    env: # Global environment variables
      DB_URL: jdbc:mysql://localhost:3306/alcalapp_db?serverTimezone=UTC
      DB_USERNAME: root
      DB_PASSWORD: 3301

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install --file pom.xml

    - name: Run tests
      run: mvn test

    - name: Check code coverage
      run: |
        mvn jacoco:report # Genera el informe de cobertura de JaCoCo
    
        # Extraer los valores de cobertura y total de instrucciones
        COVERED=$(grep -oP '<counter type="INSTRUCTION" missed="\d+" covered="\d+"' target/site/jacoco/jacoco.xml | \
                  awk -F'covered="' '{sum_covered += $2} END {print sum_covered}')
        MISSED=$(grep -oP '<counter type="INSTRUCTION" missed="\d+" covered="\d+"' target/site/jacoco/jacoco.xml | \
                 awk -F'missed="' '{sum_missed += $2} END {print sum_missed}')
        TOTAL=$(( COVERED + MISSED ))
    
        if [ "$TOTAL" -eq 0 ]; then
          echo "No coverage data found. Failing the build."
          exit 1
        fi
    
        COVERAGE_PERCENT=$(( 100 * COVERED / TOTAL ))
        echo "coverage: $COVERED%"
        echo "Code total: $TOTAL%"
        echo "Code coverage percentage: $COVERAGE_PERCENT%"
    
        if [ "$COVERAGE_PERCENT" -lt 80 ]; then
          echo "Code coverage is below 80% ($COVERAGE_PERCENT%). Failing the build."
          exit 1
        fi


